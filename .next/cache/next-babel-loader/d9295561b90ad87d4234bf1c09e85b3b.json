{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/media/izayed9/Others/job_projects/qubehash-blog/components/pagination/index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { BiChevronLeft, BiChevronRight } from \"react-icons/bi\";\nimport styles from './pagination.module.scss';\n\nvar Pagination = function Pagination(_ref) {\n  var currentPage = _ref.currentPage,\n      totalPages = _ref.totalPages,\n      handlePrevPage = _ref.handlePrevPage,\n      handleNextPage = _ref.handleNextPage;\n  return __jsx(\"div\", {\n    className: styles.paginationButtonWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return handlePrevPage(currentPage);\n    },\n    disabled: currentPage === 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }, __jsx(BiChevronLeft, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }\n  }))), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Page \", currentPage, \" of \", totalPages), __jsx(\"button\", {\n    onClick: function onClick() {\n      return handleNextPage(currentPage);\n    },\n    disabled: currentPage === totalPages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(BiChevronRight, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  })));\n}; //   Pagination.propTypes = {\n//     currentPage: PropTypes.number.isRequired,\n//     totalPages: PropTypes.number.isRequired,\n//     handlePrevPage: PropTypes.func.isRequired,\n//     handleNextPage: PropTypes.func.isRequired\n//   };\n\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/media/izayed9/Others/job_projects/qubehash-blog/components/pagination/index.tsx"],"names":["React","BiChevronLeft","BiChevronRight","styles","Pagination","currentPage","totalPages","handlePrevPage","handleNextPage","paginationButtonWrapper"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,gBAA9C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AASE,IAAMC,UAA2B,GAAG,SAA9BA,UAA8B,OAK9B;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADJC,cACI,QADJA,cACI;AACJ,SACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACM,uBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE;AAAA,aAAMF,cAAc,CAACF,WAAD,CAApB;AAAA,KADX;AAEE,IAAA,QAAQ,EAAEA,WAAW,KAAK,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN,CAJD,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACQA,WADR,UACyBC,UADzB,CARF,EAYE;AACE,IAAA,OAAO,EAAE;AAAA,aAAME,cAAc,CAACH,WAAD,CAApB;AAAA,KADX;AAEE,IAAA,QAAQ,EAAEA,WAAW,KAAKC,UAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGC,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CAZF,CADF;AAmBD,CAzBD,C,CA2BF;AACA;AACA;AACA;AACA;AACA;;;KAhCQF,U;AAkCN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { BiChevronLeft, BiChevronRight } from \"react-icons/bi\";\nimport styles from './pagination.module.scss';\n\ninterface Props {\n    currentPage: number;\n    totalPages: number;\n    handleNextPage: (page: number) => void;\n    handlePrevPage: (page: number) => void;\n  }\n\n  const Pagination: React.FC<Props> = ({\n    currentPage,\n    totalPages,\n    handlePrevPage,\n    handleNextPage\n  }) => {\n    return (\n      <div className={styles.paginationButtonWrapper}>\n        <button\n          onClick={() => handlePrevPage(currentPage)}\n          disabled={currentPage === 1}\n        >\n         <span><BiChevronLeft /></span>\n        </button>\n\n        <span >\n          Page {currentPage} of {totalPages}\n        </span>\n\n        <button\n          onClick={() => handleNextPage(currentPage)}\n          disabled={currentPage === totalPages}\n        ><BiChevronRight /></button>\n      </div>\n    );\n  };\n\n//   Pagination.propTypes = {\n//     currentPage: PropTypes.number.isRequired,\n//     totalPages: PropTypes.number.isRequired,\n//     handlePrevPage: PropTypes.func.isRequired,\n//     handleNextPage: PropTypes.func.isRequired\n//   };\n\n  export default Pagination;\n"]},"metadata":{},"sourceType":"module"}